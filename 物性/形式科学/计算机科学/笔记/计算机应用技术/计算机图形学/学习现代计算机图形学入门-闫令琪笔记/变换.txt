Transform 变换
尤其是矩阵变换，
向量的加减，点乘叉乘

变换：
为什么要变换
1.模型变换
2.视图变换

光栅化成像会涉及大量的变换，将三维转化成二维的。
缩放变换： scale

X' = SX
Y' = SY
S = 0.5
 
 X'     S  0    X
[  ] = [    ] [  ]
 Y'     0  S    Y
 
缩放矩阵(Non -uniform)
Sx = 0.5
Sy = 1

非均匀缩放

 X'    Sx  0   X
[ ] = [     ] [ ]
 Y'    0  Sy   Y
 
对称：
X' = -X
Y' = Y

 X'    -1 0   X
[ ] = [    ] [ ]
 Y'    0  1   Y
 
切变(shear Matrix)：
Y' = Y
X' = ...

 X'     1  a  X
[ ]  = [    ][ ]
 Y'     0  1  Y
 
围绕某个点旋转，默认围绕(0,0),不说方向默认逆时针
比如旋转角度为R45

      cosθ  -sinθ
Rθ = [           ]
      sinθ   cosθ

不管再复杂的变换操作，最重要的是找到一个变换关系，

总结：
线性变换 = 矩阵
线性变换定义：如果一个坐标能通过一个坐标乘以一个矩阵得到
              我们称这种变换称为线性变换



X'  = ax + by
Y'  = cx + dy

 X'     a   b   X
[  ] = [     ][  ]
 Y'     c   d   Y
 
 X' = Mx


齐次坐标：
平移变换


Ttx,ty

X' = X + tx
Y' = Y + ty


  X'    a   b   X     tx
[  ] = [     ][  ] + [  ]
 Y'     c   d   Y     ty
 
平移操作并不属于线性变换，但是我们都不想把平移当成一个特殊的变换。
能不能把平移变换也转化为线性变换。
引入齐次坐标来解决这个问题：
我们要考虑的东西，为了引入一种方便的表示，没有免费的午餐。

添加了一个维度：
                  T
2D point = (x,y,1)
                   T
2D vector = (x,y,0)


 X'     1  0  tx     x      x+tx
(Y') = (0  1  ty) . (y ) = (y+ty)
 Z'     0  0  1      1       1
 
vector + vector = vector
point - point = vector
point + vector = point
point + point = ?? (中点)
 
 x                   x/w
(y) in the 2D point (y/w), w != 0
 w                    1
 

仿射变换：

  X'    a   b   X     tx
[  ] = [     ][  ] + [  ]
 Y'     c   d   Y     ty

 
写成齐次坐标的形式：

 X'     1  0  tx     x      x+tx
(Y') = (0  1  ty) . (y ) = (y+ty)
 Z'     0  0  1      1       1
 

scale:

            Sx  0   0
S(Sx,Sy) = (0   Sy  0)
            0   0   1
			
Rotation:

          cosθ  -sinθ   0
R(θ)  =  (sinθ   cosθ   0)
           0      0     1

translation:

             1   0   tx
T(tx, ty) = (0   1   ty)		   
             0   1   1
			 

逆变换：
如果我把一个操作的变换反过来就是逆变换。

X‘ = MX

      -1
X  = M· X'



先平移再旋转和先旋转在平移结果不一样，矩阵的乘法不满足交换律
R45 . T(1, 0) != T(1, 0).R45

           x     1  0  1   cos45  -sin45     0   x
T(1,0)lR45[y] = [0  1  0] [sin45   cos45     0] [y]
           1     0  0  1     0       0       1   1
		   
矩阵的应用从右到左，比如这里做的是先旋转再平移
                               x
An(...A2(A1(x))) = An...A2.A1.(y)
                               z

结合律：先算An....A1

如何做关于某个点旋转：
先移到原点，然后旋转，然后再移回原来那个点
T(c).R(θ).T(-c)   从右到左写

3D 变换(Transformations)：
                    T
3D point = (x,y,z,1)
                     T
3D vector = (x,y,z,0)

3D 平移：

 X'     a   b   c   tx     x
(Y') = (d   e   f   ty) . (y)
 Z'     g   h   i   tz     z
 1      0   0   0   1      1
 
 