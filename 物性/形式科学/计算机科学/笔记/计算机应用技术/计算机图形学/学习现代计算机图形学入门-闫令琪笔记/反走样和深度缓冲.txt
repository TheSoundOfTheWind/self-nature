反走样：
1.信号处理 信号与系统
视口变换
把三角形画在屏幕上，就是光栅化

遮挡可见性
采样的理论：
锯齿（走样）Aliasing
反走样 - 抗锯齿

采样在图形学中是一个广泛的做法

动画就是在时间上的采样

视频就是按时间来采样

一切看起来不太对的叫 artifacts

摩尔纹：奇数行奇数列去掉
手机拍电脑屏幕：采样的问题产生的

汽车向前形式，轮子在倒转，人眼采样跟不上速度

采用，时间和空间上采样的瑕疵。

信号的变化太快，以至于采样的速度跟不上：频率

采样之前做一个模糊，滤波
先做模糊或者滤波再采样，这样就可以扛锯齿反走样

先走采样再做模糊？不好
频域

cos2派x，通过调整系数得到不同频率的波

傅里叶级数展开，任何一个周期函数都可以写成正弦和余弦的组合
傅里叶变换，给定任何一个函数，经过复杂的函数得到一个函数
逆傅里叶变换
如果频率很高那么采样的频率也要高，不然很多信号就会丢失哪以回复原信号

走样，同样一个采样方法，采用不同频率的函数采样得到的点却是一样的
这就是走样

滤波：
把某个特定的频段，特定的频率给删掉，去掉一系列的频率

傅里叶变换把时域变成频域

低频信息集中在中间
高频信息丰富，低频世界模糊

加权平均，在周围做一个平均1/4 1/2 1/4
均值模糊 平均边缘
时域 频域
时域的卷积等于频域的乘积

box filter
box越大越模糊

分母越大分子的变化的作用的就越小，突变的可能性越小，图像变化的频率越低。

采样其实就是重复频域上的内容

冲击函数
采样重复频谱

反走样：
增加采样率，反走样，物理有极限提高算法方面的优化
低通滤波，然后再采样
先模糊后采样 MSAA
MSAA牺牲了什么东西，增大了计算量

边缘抗锯齿

其他的抗锯齿的方法：
FXAA
TAA

超分辨率
DLSS 小图拉大 （一切设计猜测都是用深度学习来做）

同时生成：（Z-buff）
frame buffer
depth buffer

Depth/Z buffer
深度缓存，最终只保留了离照相机最近的深度
当前能看到的最浅深度
for(each triangle T)
  for(each sample (x,y,z) in T)
    if(Z<zbuffer[x,y])
	  framebuffer[x,y] = rgb;
	  zbuffer[x,y]=z;
	else

常熟乘以一个三角形个数，对每个像素在求最小值O(n)
深度缓存的算法和三角形的顺序没关系
几乎用到所有的硬件中，每个像素维护一个深度

着色(shading)：
始终把摄像机放在(0,0,0)往-z看
着色，这样就有阴影效果，这样才更真实
光照的位置不同，物体的颜色也相应的发生了变化，这就是着色

什么是着色：
引入明暗和颜色的不同
对不同物体引用不同的材质就是着色
不同的材质和光线的相互作用有不同的方法

最基础的着色模型：
blinn-phong reflectance model:
specular highlights 高光
diffuse reflection 漫反射 
ambient lighting 间接光照(环境光照)，别的物体反射接受到的光照

shading point:
观测方向 v
平面的法线 n
光照方向 L
以上都是单位向量
平面颜色
shininess，反射率

考虑一个点的着色只看这个着色点本身，所以着色有局部变化
那么阴影怎么生成呢

shading ！= shadow(阴影)

同样的光照射到同样的表面，但角度不同看着却不同
物体表面的法线和光线来的夹角越小反射越强烈
为什么有冬天夏天，不是离太阳远近的变化，
夏天几乎是直射，暖
冬天间接照射，冷
单位面积接受到多少能量

余弦定律：
cosθ = l.n 越大能量越大

一个光源，一个时刻散发出来的光能是相同，传播的过程中
球壳越来越大，单位表面积的的能量越来越小
单位为1的一个球壳的能量是I
I/r^2

Ld = Kd(I/r^2)max(0,n.l)

diffusely reflected light :Ld （漫反射常数）

diffuse coefficient (color) :Kd

energy received by the shading point: max(0,n.l)

energy arrived at the shading points: I/r^2



	 

