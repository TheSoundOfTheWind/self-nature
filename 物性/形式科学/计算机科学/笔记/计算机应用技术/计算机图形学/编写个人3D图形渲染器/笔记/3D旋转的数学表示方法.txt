可参考网址：https://zhuanlan.zhihu.com/p/351726202
//-----------------------------------------------------------------------------
用四元数或者欧拉角或者姿态矩阵都可以描述刚体的转动。在坐标系变换的计算中必须得
到姿态矩阵，姿态矩阵的时间更新也可以用这三种方式来进行，但是计算量和难度不同，
也就是说问题中你说得这两种方法描述坐标系转动都可以。为啥用四元数？在惯性导航3D
空间表示旋转的有三种方式：
欧拉角
矩阵
四元素

用四元数进行计算的最主要原因是在进行正交化时方便且误差最小，次要原因是计算量小。
我简单解释下，描述转动的矩阵一定是正交矩阵，我就叫它姿态矩阵。对于一般问题姿态
矩阵是时变的，我们可以通过输入角速度信息来更新这个矩阵。已知欧拉角或者四元数也
可以计算出这个矩阵，我们可以用角速度信息更新欧拉角或者四元数，进而同样可以得到
新的姿态矩阵。但是在计算中会存在误差，典型的误差是数值积分的截断误差还有把角运
动当矢量对待造成的交换性误差，这些最终会使姿态矩阵出现误差，误差一方面会造成角
位置漂移，一方面会使矩阵不再正交。在使用姿态矩阵或者四元数计算时，这两方面的误
差都会出现，第二种误差可以通过正交化减小，四元数正交化非常容易，但姿态矩阵就复
杂很多。使用欧拉角计算时，只会有第一方面的误差，但这并不是好事，因为误差总量是
相当的，这意味着误差无法通过正交化方法减小。最终是四元数的计算误差小同时计算量
小。此外欧拉角法还存在一个问题就是微分方程有可能存在奇点，应该和高赞答案说得死
锁是一回事。



基于多传感器数据融合的三维运动导航信息包括姿态、速度、位置，其中属姿态最为复杂，
但也最为核心。此处涉及旋转表示、姿态表达和姿态更新方法：

1.三维空间中的旋转表示方法有欧拉角、旋转向量法、旋转矩阵法、四元数法

2.三维空间中的旋转产生姿态，除了旋转向量法通常在中间过程中使用外，其他三种方法均
可用来表达姿态。

3.因欧拉角存在“万向节锁”问题，基于多传感器融合的姿态更新算法一般不会采用欧拉角，
大多数采用四元素或旋转矩阵的方法进行姿态更新。

欧拉角介绍：
//-----------------------------------------------------------------------------
不同的坐标系定义，有不同的旋转顺序。但不管坐标系如何定义，旋转的本质保持不变，即
：按照"航向->俯仰->横滚"的顺序旋转。因此，绕三个轴旋转得到的欧拉角分别表示未航向
角、俯仰角和横滚角。

常见的坐标系定义如下：
1.机器人坐标系
x、y、z分别对应前左上，那么，旋转顺序为z-y-x
2.惯性导航坐标系
x、y、z分别对应右前上，那么，旋转顺序为z-x-y
3.多旋翼无人机坐标系
x,y,z分别对应前右下，那么，旋转顺序为z-y-x
4.qt3d 对应的坐标系
x,y,z分别对应右 左下 上
需要注意的是：欧拉角有明确的物力意义，不随坐标系定义的不同而不同：
-航向角：机器人一般以逆时针为正，顺时针为负（注意的是，如多旋翼无人机相关的惯性
导航常以顺时针为正，逆时针为负，如北偏东为正，北偏西为负）
-仰俯角：本体抬头为正，低头为负
-横滚角：本体向右滚为正，向左滚为负

优点：直观，便于理解
缺点：万向节锁，奇异性问题，一般用于人机交互，不会用来做姿态解算

旋转矩阵介绍：
//-----------------------------------------------------------------------------
旋转矩阵是描述三维旋转的一个矩阵，一个真实的姿态对应唯一的旋转矩阵。
假设本体坐标系b系的单位正交基（e1,e2,e3),经过一次旋转，旋转到了世界坐标系w系，此
时w系的单位正交基（e1',e2',e3')。
