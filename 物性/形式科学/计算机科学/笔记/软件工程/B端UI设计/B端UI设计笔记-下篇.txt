#制定B端UI设计画布尺寸
1.调查用户的主要使用方式和分辨率
2.然后从最小尺寸做起，并制定响应逻辑
原因1：响应式的制定逻辑中，从小到大适配容易，但是从大到小适配非常的困难，问题无数
原因2：多数目标用的实际电脑分辨率小于1080p
1080p以下用户总数远高于1080p
原因3：1080p过大，画布很难处于10%显示模式过大的画布对于新手来讲容易过度填充内容

#元素宽度分为如下两个模式
定宽模式
响应模式（自适应调整）

#B端项目的布局框架
B端产品，基本都是用来解决问题的工具，它们的整体使用逻辑和本地软件非常类似
任何功能，模块众多的软件都会有自己的信息框架和使用方法
如figma的布局框架：
                            工具栏
图层面板/页面视图           工作区                     属性面板

在B端项目中，框架的定制至关重要，决定了整个产品的使用逻辑和步骤
框架分为两种：上下布局和左右布局
##上下布局
在这类设计中，通常顶部导航栏是悬浮固定的，下方的内容可以延长
，并实现在内容内滚动如（wps、nodepad++）

##左右布局
左右布局中，右上方通常也会放置一个栏目用来存放一些必要的信息和快捷操作
选项在这个布局状态下，导航和顶栏悬浮固定，较长的页面可以在内容区域内上下固定
总结：
当整体页面内容少，导航操作频率低的时候用上下布局
当整体页面内容层级多，导航操作频率搞的时候用左右布局

##布局所需的其他模块
左右、上下布局只是确定了最基本的信息结构，但完整的B端信息框架不止是导航
、内容的排列
标签、抽屉、弹窗、提示
1.标签栏的应用
确定是否应用页内标签页，适用于需要多个页面切换比较多的产品需求

2.抽屉组件应用
确定是否使用抽屉的方法来展示部分详情，表单的信息，优点是没有跳出原来
的页面

3.弹窗的使用
确定强提示弹窗是否需要遮罩，弹出页面的哪个区域

4.提示气泡
确定弱提示类气泡的弹出位置、逻辑、以及如何消失和关闭

布局框架决定了后续所有页面的操作逻辑、先确定完布局框架，才能
进行交互和视觉设计

#B端页面响应式和栅格
要谨记，响应式不是等比放大内容而会固定应用的各类间距数值不变

栅格的应用，就是制定固定的对齐标准以及将每个列宽作为一个长度
系数使用。通过栅格的系数制定模块宽度，并快速实现响应式的规则和逻辑

#B端项目的开源依赖
引用别人的代码不仅仅是偷懒，而是提升生产效率，用别人造好的零件组装
产品，比重复造轮子更高效，从头造轮子对一个项目来说真的一点好处都没有

国内的前端开源框架
AntDesign
Element UI
国外的开源框架
Bootstrap
Material Design
一个完整的框架包含
代码包、开发文档、设计源文件、设计文档

#B项目的设计规范
B端设计领域，设计规范的意义重大很多新手开始设计前都在研究如何做
规范，因为在B端项目对”模块化“的应用需要我们将可复用的元素、样式、
逻辑统一
设计规范有助于统一设计团队的步调而不会让不同设计师输出界面风格不一
同时，规范的制定有助于提升设计效率通过设计软件的样式、控件功能快速
调用。
开发需要根据设计规范制定样式模块、开源框架的规范并不能覆盖真实的样式
需求
主色
辅助色
中性色
B端设计规范能有效提升
1.页面统一性
2.设计效率
3.开发效率
4.项目进度

B端项目的规范制定并不困难，即统计形成你当前界面的视觉要素
01.框架
02.排版
03.字体
04.色彩
05.控件
06.组件
07.图标

第一：框架规范
页面的基本结构、栅格用法，响应式规范等内容

第二：排版规范
间距的等级及内外边距的规则，亲密性和对齐的应用

第三：字体规范
对应用的文字属性样式进行整理，包含字体、字号、字重等属性记录

第四：色彩规范
将项目应用过的颜色进行整理，包含主色、中性色、辅助色

第五：控件规范
整理按钮、单选、开关、气泡等基础交互元素，并对不同状态进行解释

第六：组件规范
对下拉菜单、日期选择、级联选择等复杂交互元素、并对交互方式、流程进行
解释
设计规范只需要整理项目中需要应用的不需要为了”完整“加入了大量多余内容

设计规范的输出，并不是对着电脑凭空想象而是先通过实际设计来确认出设计风格

规范输出的第一步，将元素整理进同一画布中，这个画布可以作为一般规范文件使用
只要再补充部分文字内容并分享链接即可

如果需要输出成文档形式那么首先要选择合适的文档工具：语雀、石墨、飞书、腾讯文档
然后，根据你规范画布中包含的模块优先制定完整的内容目录结构
可以参考：Ant Desing导航栏，Element UI导航栏，Clarity Design导航栏

最后，再根据对应模块输入文字内容如果不知道怎么写，可以参照成熟案例

真实项目的规范文档不是开源框架、规范解释不是”天书“，宁缺毋滥

#字体
微软雅黑
注释英文、数字 9-11
注释、小段文本 12-13
正文、小型标题 14-16
大标题、大数字 16-20

#图标
图标类型
-工具图标
-装饰图标
-启动图标
工具图标的主要作用是提升信息识别效率
B端设计的工具图标通常只应用两种基本风格
线性图标
面性图标
一个完整的项目往往需要大量工具图标、而工具图标最大的难点就是
图标的统一性
大小一致、粗细一致、圆角一致、透视一致
其中最困难的就是尺寸大小的一致性、几何图标具有视觉上的欺骗性

iconpark 、iconfont *、 icoon mono、iconmostr
iconpark 免费的

#按钮和标签
按钮Button：通过鼠标点击触发相关事件的交互元素
标签Tag：用来标识同类关键字的类按钮元素，不一定可以点击
当标签可以点击时就和按钮没有实际的区别，它们在交互中就会
包含下面这些状态
默认状态、悬浮状态、点击状态、禁用状态
按钮可以简单分为大、中、小三种尺寸的按钮、在制定UI按钮尺寸
的首要目标是确定其高度
大按钮：40-64px
中按钮：28-40px
小按钮：12-28px
而在宽度的制定中，则包含两种方法固定宽度按钮和自适应宽度按钮
定宽和自适宽
自适应按钮的设计规则时确定高度和左右内边距可以结合Figma的Autolayer
和边距设置完成

设计按钮时，要确认应用哪种高度就要根据环境和”权重“来决定

按钮和标签的设计演示
文字矩形按钮
图标矩形按钮
图标文字混合
图标在按钮右侧
4的倍数

#输入框
输入框是用户用来输入信息的模块、它由一个矩形区域和文字信息组成
输入框的几种状态
Default
Hover
Focused
Typing
Entered
Disabled
Error
Confirmed
输入框的设计不像按钮有那么多高度，合理的输入框高度在24-40px之间
输入框宽度根据环境决定，优先确认最小宽度，尽可能让宽度大于适配
输入内容的长度即可
在响应式环境中，输入框可随父层级伸缩，但它并不根据内容的多少进行
宽度的适应
输入框包含5种基本的状态
默认、选中、输入中、已输入、禁用

一个项目中输入框输入类型各不相同，所以对特殊类型还会添加图标进行暗示
输入框内部左、右添加图标
输入框是非常重要的控件元素、是后续大量控、组件制定的规范依据

输入框的设计演示
基本描边输入框
选中输入的状态
左侧添加图标
右侧添加图标

#单选和多选项设计
表单中得输入方式
文本框是用来输入自定义内容的填空区域
而系统在很多情况下想要用户做的是”选择题“
也就是说系统本身的输入指令提前就预制好了
用户要在这些选项里选出当前你想要的那个

B端项目右非常多选择的方式，但最常见的即一般单选
选择和多选选择的应用
通常单选、多选可以用前面的选框图形判断图形代表单选选择，
方形代表多选选择
一般的选项会包含3中状态
默认状态
选中状态
不可选状态
但是，多选框又是会有特例，那就是包含下级选项时的半选状态
但并不是多有表单场景中的选项都这么设计

#下拉菜单
下拉菜单，适用于展开隐藏选项的面板、常通过点击按钮和下拉选框
控件展开
下拉菜单的状态类型根据内容决定，最基础的下拉菜单提供文字/图标的列表选项
下拉菜单的状态
默认、展开、鼠标悬浮选项、点击、结束
下拉菜单的尺寸没有固定的数值、宽度尽量满足内容单行显示，且不小于触发元素
菜单整体的高度，根据列表数量决定由上下的留白加上所有列表的内容组合而成

通常下拉菜单会根据触发元素进行左或右对齐，尽量不要使用垂直居中的方法来
对齐面板

同时，下拉选项如果超过6个就可以隐藏，通过滚动视图将可视内容控制在
合理范围内
下拉菜单状态
默认
展开
鼠标悬浮选项
关闭

#分页标签
分页标签，是用来切换下级内容区域的控件、可以应用在页面内容切换或者
模块内容切换

其中，标签的设计有三种不同的情况定宽标签、适应性标签、等分标签
每个标签都可以确定最小和最大宽度、部分场景文字大于标签宽度可以进行
省略

选中标签的时候，背景尽量和下方内容区域一致，不要对标签按钮设置额外的
主色、辅助色

如果标签数量会变动，且数量过多时则可以使用滑动模式来隐藏更多的标签

#面包屑
面包屑控件是网站项目中页面的路径指示器
它的命名源自格林童话中的《汉赛尔与格莱特》
在B端项目中，往往包含非常复杂的层级结构、我们很容易在操作的过程中混淆页面
的功能和目的
复杂的B端导航
面包屑由页面和连接符组成，它的数量和页面所处层级进行对应
一级页面>二级页面
一级页面>二级页面>三级页面
一级页面>二级页面>三级页面>四级页面
对于一些跳转要求高、类目复杂的产品，有时候会为对应层级提供下拉菜单用于
跳转
尽量对页面使用简称而不是页面标题全名而且不要偷懒使用”>"符号代替箭头图标
主页>NBA>湖人队>詹姆斯
对于页面的特殊状态和场景，如果搜索结果、筛选的结果我们也可以在面包屑末尾
添加一个用来清空的标签

面包屑控件设计演示：

#提示和气泡的设计
提示框和气泡都是B端平台中的提示控件、用来对特定操作作出合理的提示反馈
文字框提示：主要用于提示一些文本内容，通常用来解释控件功能、隐藏信息
气泡框：可以用来提示更复杂信息，并进行特定操作的弹出选框

文字提示框用来展示当前聚焦的内容，信息显示要清晰可以通过反色的背景突出
文字，并可以使用背景突出层次
深色模式提示框、浅色模式提示框
为了让提示信息和聚焦内容关联性更高，可以通过添加和聚焦内容居中对齐的
三角箭头
气泡框的设计和文字提示框基本一致，但可以置入更多信息，两者的区别更多是
在前端开发层面，而不是设计的层面。
在项目中，设计师是可以合并两种提示类型的，即只有气泡框，来显示纯文本和
组合型内容
提示框分类
一般文字提示框
图文混合提示框
增加确认取消按钮提示框

#整体设计
先对所有模块和模块的层级进行一个梳理
mindnode 用思维导图来分割模块

#细节设计
先有框架再做细节
