-functions:
 int raise(int sig);
 void (*signal(int sig, void (*fun)(int))) (int)
- types:
  sig_atomic_t
  
header
<csignal> (signal.h)
C library to handle signals
//------------------------------------------------------------------------------
一些运行环境使用信号来通知运行进程某些事件。这些事件可能与程
序代码执行的错误有关，例如错误的算术运算或异常情况，例如请求
中断程序。
信号通常表示程序被请求终止或发生不可恢复的错误的情况，因此处理
信号允许执行终止前清理操作或尝试以某种方式从错误中恢复。
并非所有运行环境都需要在标准 C 库中设计的情况下生成自动信号，而
其他一些环境不仅生成这些，还生成许多更具体的信号。但在任何情况下
，通过调用raise函数显式生成的所有信号都将传递到其相应的信号处理程序。

Functions
signal() :设置函数来处理信号（函数）
raise : 生成信号（函数）

Types
sig_atomic_t : Integral type (type )


宏常量
类型	    宏	       信号
int （信号）
SIGABRT	(Signal Abort) 异常终止，例如由 中止 功能。
SIGFPE	（信号浮点异常）错误的算术运算，例如除零或导致溢出的运算（不一定是浮点运算）。
SIGILL       (Signal Illegal Instruction) 无效的功能图像，例如非法指令。
                这通常是由于代码损坏或试图执行数据。
SIGINT	（信号中断）交互式注意信号。一般由应用程序用户生成。
SIGSEGV	（信号分段违规）对存储的无效访问：当程序尝试在已分配的内存
                  之外读取或写入时。
SIGTERM	（信号终止）发送到程序的终止请求。

函数 （处理程序）
SIG_DFL	默认处理：信号由该特定信号的默认操作处理。
SIG_IGN	忽略信号：忽略信号。
SIG_ERR	指示失败的特殊返回值。

