//QKeyEvent
//-----------------------------------------------------------------------------
The QKeyEvent class describes a key event. 
qmake:	QT += gui

Public Functions:
QKeyEvent(QEvent::Type type, int key, Qt::KeyboardModifiers modifiers, 
quint32 nativeScanCode, quint32 nativeVirtualKey, quint32 nativeModifiers, 
const QString &text = QString(), bool autorep = false, ushort count = 1)
QKeyEvent(QEvent::Type type, int key, Qt::KeyboardModifiers modifiers, const 
QString &text = QString(), bool autorep = false, ushort count = 1)
int	    count() const
bool	isAutoRepeat() const
int		key() const
bool	matches(QKeySequence::StandardKey key) const
Qt::KeyboardModifiers	modifiers() const
quint32					nativeModifiers() const
quint32					nativeScanCode() const
quint32					nativeVirtualKey() const
QString					text() const

Detailed Description:
//-----------------------------------------------------------------------------
Key events are sent to the widget with keyboard input focus when keys are pressed 
or released.

A key event contains a special accept flag that indicates whether the receiver will 
handle the key event. This flag is set by default for QEvent::KeyPress and 
QEvent::KeyRelease, so there is no need to call accept() when acting on a key event. 
For QEvent::ShortcutOverride the receiver needs to explicitly accept the event to 
trigger the override. Calling ignore() on a key event will propagate it to the parent 
widget. The event is propagated up the parent widget chain until a widget accepts it 
or an event filter consumes it.

The QWidget::setEnabled() function can be used to enable or disable mouse and 
keyboard events for a widget.

The event handlers QWidget::keyPressEvent(), QWidget::keyReleaseEvent(), 
QGraphicsItem::keyPressEvent() and QGraphicsItem::keyReleaseEvent() receive 
key events.

