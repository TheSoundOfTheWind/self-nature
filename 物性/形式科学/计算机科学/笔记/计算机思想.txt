1.在计算机世界里万物都是接口，每一种接口都是一种语言，接口上层和下层，一个通过接口提出自己的需求，
一个通过接口实现需求。接口的使用者通过语言（接口）传达自己的目的，表达自己的思想，接口的使用者承
载着这个功能和含义。人说话一样一个词有大致哪些含义必须定死，约定俗成。这样一个人才能通过对这些词
的组合表达出一个完整的意思。计算机中使用各种接口也是一样的，最终就是要想计算机表达自己的目的。这
些接口就是计算机世界的语言，你熟悉它们就能用这些语言熟练的和计算打交道。计算机是一个庞大的世界，
大致分为以下七层：
第6层 -- 用户 -- 执行的程序
第5层 -- 高级语言 -- C++，Java
第4层 -- 汇编语言 -- 汇编语言代码
第3层 -- 系统软件 -- 操作系统
第2层 -- 机器     -- 指令集组织结构
第1层 -- 控制系统 -- 微代码或硬布线
第0层 -- 数字逻辑电路 -- 电子线路、逻辑门等

 从一般使用者的角度来看，计算机系统是由硬件和软件组成的，而计算机软件根据其在计算机系统中所起的作用
 又可进一步分为系统软件和应用软件。系统软件是指能够对计算机硬件资源进行管理，对用户方便使用计算机硬
 件资源提供服务的软件，其核心就是操作系统。应用软件则是人们使用各种计算机语言为解决各种应用问题而编
 制的程序。因此，从这一层面上看，计算机系统自下而上可以看成是由三个层次构成的，即：计算机硬件、系统
 软件和应用软件，下层为上层功能的实现提供支持。 

第6层是用户层，也是面向一般用户的层次，换句话说，一般用户在使用计算机时所看见的就是这一层次。在这一
层次上，用户可以运行各种应用程序，如字处理程序、制表程序、财务处理程序、游戏程序等等。对用户层而言，
其他各较低的层次可以是不可见的，也就是说，用户不必了解各底层是如何实现的。 

第5层是高级语言层，它由各种高级语言组成，如 C、C++、Java、Web编程语言等。这些高级语言提供该层用户为
完成某一特定任务而编写高级语言程序。一方面，所编写的这些高级语言程序提供给上层用户层的用户使用，另一
方面这些高级语言程序是通过编译或解释成低级语言来实现的。虽然使用这些高级语言编写程序代码的程序员需要
了解所使用语言的语法、语义及各种语句等，但这些语法、语义的实现及语句的执行过程对他们来讲是透明的（或
者说是隐藏的，不可见的）。 

第4层是汇编语言层，它包括各种类型的汇编语言。每一个机器都有自己的汇编语言，上层的高级语言首先被翻译成
汇编语言，再进一步翻译成机器直接识别的机器语言。机器通过执行机器语言程序来最终完成用户所要求的功能。 

第3层是系统软件层，其核心就是操作系统。操作系统对用户程序使用机器的各种资源（CPU、存储器、输入输出设
备等）进行管理和分配。例如，当某一用户程序需要运行时，首先由操作系统将其调入内存中，这其中需要操作系
统为其分配内存空间进行存储。再如某程序需要使用某一输出设备进行结果的输出时，需要操作系统为其提供对该
设备的控制等。 

第2层是机器层，这是面向计算机体系结构设计者的层次。计算机系统设计者首先要确定机器的体系结构，如机器的
硬件包含那些部件，采用什么样的连接结构和实现技术等。在这一层次上提供的是机器语言，也是机器唯一能直接
识别的语言，其他各种语言的程序最终都必须翻译成机器语言程序，由机器通过其硬件实现相应的功能。 

第1层是控制层，这一层的核心是计算机硬件控制单元（译码器）。控制单元会逐条接收来自上层的机器指令，然后
分析译码，产生一系列的操作控制信号，并由这些控制信号控制下层的逻辑部件按照一定的时间顺序有序地工作。 
cpu的指令队列连接着一个译码器。这个译码器将上面的指令集翻译成cpu真正的操作码（通常称为OP）。

第0层是数字逻辑层，在这里我们所面对的是计算机系统的物理构成：各种逻辑电路和连接线路，它们是组成计算机
硬件的基础。 
计算机系统的各个层次并不是孤立的，而是互相关联、互相协作。一般来讲，下层为上层提供服务或执行上层所要求
的功能，而上层通过使用下层提供的服务完成一定的功能。计算机这种层次划分的好处是：某一个层次的设计者可以
专注于该层功能的实现，通过采用各种技术，提高各层次的性能，从而提高计算机系统整体性能。而你需要某种服务
必须得通过媒介或语言来告知下一层，鼠标键盘是一种媒介，接口也是一种媒介。

就好比神话世界里的九重天一样，只不过这里是七重天，每一重天就是一个世界，每重天的世界都是为了上一层世界
服务，管理调用下一层世界的资源。要想在某一层的世界里活的滋润必须对于这个世界的媒介有一定的了解，了解的
越深和这个世界的原著民（接口）沟通的越顺畅越快捷。

程序 编程语言 编译器 可执行程序 操作系统 指令集 控制器 数字逻辑电路

每一项所对应的知识都是庞杂的，但是其中的精华就是那些，每种你花一两年就可以学习到一个比较精深的水平
程序 = 数据结构 + 算法
编程语言 = c c++ python shell
编译器 = 编译器理论
操作系统 = linux

1. 写代码不是让自己成为古怪的艺术家，而是朴实无华一种实实在在的劳动。代码要整齐高效，要看者简单明白却又
无可挑剔。
2.所有的计算机问题都可以通过增加一个中间层来解决。
3.所谓的编程，就是把自然语言的需求翻译成计算机语言，让计算机去执行。
4.计算机语言的发展史就是翻译人类想法的发展史，或者人类改造世界的想法的具现史，一开始只能具现简单的想法，
到现在能翻译很复杂的想法。从机器语言（0101，汇编）到高级语言在到后来的人工智能，都是人类想法的翻译或者
具现。人类说要有光，灯就打开了，人类说要有食物，机器就给你做好了食物。把你的一切想法具现翻译为了现实。
从人脑里的念头想法愿望目标，到具现化者其中经过了层层的翻译。不同翻译层叫不同的名字，但本质都是翻译。人
类语言或想法经过人工智能 - 高级语言 - 编译器 - 汇编语言 - 汇编器 - 机器语言 - 计算机。
归根结底是人类的分别心带来的总总变化，有分别就有种种象有种种差别。一直在分在别，实际上了不可得。
4.人门没法理解他没有经历的过的事情。
5.程序设计=数据结构 + 算法
自认为掌握了,真实并没有真正掌握,大脑只是对这个技术点建立了一个整体的概念,在一些细节处做了想当然的假设 ,
等到你用语言再来表达的时候就会发现,原来这个假设并不完全成立,是辛辛问题的。


