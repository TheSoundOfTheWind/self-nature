1.《C++程序设计语言》(The C++ Programming Language) 
作者：Bjarne Stroustrup(更新到C++11) C++之父写的经典C++书籍。内容覆盖C++的所有东西，从语言内核到标准库、编程范式和语言哲学(这使得最新版突破1千页)。2013年5月出版的第四版涵盖了C++11的内容。
电子书：第三版（中文）、第四版（英文）

2.《C++标准程序库》(C++ Standard Library Tutorial and Reference) 
作者：Nicolai Josuttis (更新到C++11) 这本书是C++标准库（STL）的引导和手册。 2012年4月发行的第二版涵盖了C++11。

3.《The C++ IO Streams and Locales》 
作者：Angelika Langer and Klaus Kreft 除了这本书，市面上基本没有讲解streams and locales的书。

C++ 11手册:
《The C++ Standard》 (INCITS/ISO/IEC 14882-2011) 
作者：C++标准委员会 这当然是C++最权威的标准。要注意的是，
C++标准是提供给有足够精力和时间的专家级用户研究用的。国内
估计很少有人看，在国外一般它的第一个发行版也非常贵($300+ US)，
国外有人会买现在价值$30US的电子发行版。

《Overview of the New C++》 (C++11/14) 
作者：Scott Meyers(更新到C++11/C++14) 这是Scott Meyers开
设的一个为期3天的C++课程的教材。Scott Meyers是C++社区最受
尊敬的作者之一。虽然内容比较简短，但质量极高。

初级(入门)
如果你是一个无编程经验的C++初学者，或者有其它语言经验的C++初学者，那强烈推荐下面的书籍。
1. 《C++ Primer》 
作者：Stanley Lippman, Josée Lajoie, and Barbara E. Moo 
(更新到C++11) 近1千页，本书透彻的介绍了C++，以浅显和详细
的方式讲到C++语言差不多所有内容。2012年8月发行的第五版包
含C++11的内容。

2. 《Accelerated C++》 
作者：Andrew Koenig and Barbara Moo 这本书覆盖了和C++ Primer
一样的内容，但厚度只有C++ Primer的四分之一。这主要是因为本书
面向的不是编程的初学者，而是有其它语言经验的C++初学者。对于
初学者，本书学习曲线稍显陡峭，但对于能克服这一点的学习者而言
，它确实非常紧凑的介绍了C++这门语言。

3. 《C++编程思想》（Thinking in C++) 
作者：Bruce Eckel 共两卷，第二卷主要将标准库，但还是不错的。

4. 《C++程序设计原理与实践》 （Programming: Principles and Practice Using C++ ）
作者：Bjarne Stroustrup C++之父写的C++入门书籍。本书面向没有编程经验的初学者，
但相信有编程经验的人也能从本书中学到不少东西。

最实用
1.《Effective C++》 
作者：Scott Meyers 本书以瞄准成为C++程序员必读的第二本书籍而写
，Scott Meyers成功了。早期的版本面向从C语言转过来的程序员。第三
版修改为面向从类似Jave等语言转来的程序员。内容覆盖了50多个很容
易记住的条款，每个条款深入浅出（并且有趣）讲到了你可能没有考虑
过的C++规则。

2.《Effective STL》 
作者：Scott Meyers 讲解方式和Effective类似，但内容主要面向于STL。

中级
3.《More Effective C++》
 作者：Scott Meyers 更多（深入）关于C++的规则。
 没有前一本Effective C++重要。但同样值得一读。

4.《Exceptional C++ 》
作者：Herb Sutter 讲解方式为提出并解决一系列的C++难题。
本书极其透彻的讲解了C++资源管理、异常安全和RAII。同时
覆盖了一些较为深入的技术，比如：编译防火墙（pimpl idiom)
、名字查找规则,、好的类设计和C++内存模型。

5.《More Exceptional C++》
 作者：Herb Sutter 讲到了Exceptional C++没有涉及到的更高级
 的异常安全技术, 同时讨论了高效的C++ OOP方式和如何正确的使用STL。

6.《Exceptional C++ Style》
 作者：Herb Sutter 讨论了泛型编程、最优化和资源管理。本书出彩
 之处在于谈到了如何用非成员函数和单职责原则编写模块化的C++代码。

7.《C++编程规范》(C++ Coding Standards) 
作者：Herb Sutter and Andrei Alexandrescu “编程规范”这里并不
是”代码缩进要用几个空格”。这本书包含了101个例子、惯用法、缺陷，
通过这些可以帮助你编写正确、清晰高效的C++代码。

8.《C++ 模板完全指南》(C++ Templates: The Complete Guide)
作者：David Vandevoorde and Nicolai M. Josuttis 本书是关于
C++11之前的模板的。它覆盖了从非常基础到最高级的元编程知识，
解释了模板工作原理的细节(概念和实现方式）。并且讨论了大量
的缺陷。附录中包含关于ODR和重载的精彩总结。

高级
1.《C++设计新思维-泛型编程与设计模式之应用》(Modern C++ Design ) 
作者：Andrei Alexandrescu 泛型编程鼻祖级书籍。本书先介绍了基于策略
（policy-based)的设计、type lists 和泛型编程基础， 然后讲到了许多
有用的设计模式(包括small object allocators, functors, factories, 
visitors, and multimethods) 如何被高效、模块化、清晰的泛型代码实现。

2.《C++模板元编程》(C++ Template Metaprogramming)
作者：David Abrahams and Aleksey Gurtovoy 更多的是讲解boost::mpl，
想要深入理解mpl的可以看一下。

3.《C++ Concurrency In Action》 
作者：Anthony Williams 这本书主要内容是C++11的并发支持，包括线程
库、原子(atomics)库、内存模型、锁和互斥量。同时也讲解了开发和调
试多线程程序的一些难题。

4.《Advanced C++ Metaprogramming》 
作者：Davide Di Gennaro 前C++11时代TMP技术的手册级书籍。本书更侧
重于工程实践。里面有大量的可能几乎无人知道但很实用的技术写成的代
码。本书可能比Alexandrescu的书更值得读。对于资深的开发者来说，这
是一个学习C++暗角技术的绝佳机会，通常这些技术要通过资深的编程经
历才能获取。

经典 / 古老
注意: 下列书中的部分内容可能有些过时

1.《C++的设计与演化》(The Design and Evolution of C++ )
作者：Bjarne Stroustrup 如果你想知道为什么C++是今天这个样子，
那么这本书将给你答案。本书覆盖C++标准化之前的一切东西。

2.《C++沉思录》(Ruminations on C++) 
作者：Andrew Koenig and Barbara Moo 本书不是为了讲解具体的C++
技术细节，而是如何通过C++编写出色的OO代码。

3.《Advanced C++ Programming Styles and Idioms》 
作者：James Coplien 讲解了一些C++特有的惯用法. 它确实是一本不错
的书籍，如果时间闲暇也可一读。不过它确实很老了，可能有些不符合
现代的C++。

4.《大规模C++程序设计》（Large Scale C++ Software Design） 
作者：John Lakos 本书介绍了如何管理大规模C++软件项目的技术。
很值得一读，除了有些过时以外。它是在C++98以前写的，缺少了好
多对大规模项目重要的特性（比如名字空间）。假如你工作在一个大
规模的C++项目中，你可能想要读它, 不过你需要注意那些不适用甚
至错误的技术点。

5.《深度探索C++对象模型》 (Inside the C++ Object Model ) 
作者：Stanley Lippman 如果你想知道虚函数是如何实现、多继承时
基类是如何在内存中排布的和所有影响性能的东西，那么这本书会给
你答案。不过这本书有好多低级的拼写排版错误，英文原版错误更多
，侯捷翻译的版本中注明和纠正了很多，但本书绝对值得一读，你将
明白编译器如何实现C++的对象模型。

零.手册类：
1.《C++程序设计语言(The C++ Programming Language)》
2.《C++标准程序库(C++ Standard Library Tutorial and Reference) 》
3.《The C++ IO Streams and Locales》
4.《The C++ Standard (INCITS/ISO/IEC 14882-2011)》
5.《Overview of the New C++ (C++11/14) 》
6.《The Standard C Library》
一.初级入门系列：
1.《C++ Primer》
2.《Accelerated C++》
3.《C++编程思想（Thinking in C++) 》
4.《C++程序设计原理与实践（Programming: Principles and Practice Using C++ ）》
6.《C++初学者指南》
7.《C++ Primer Plus》
8.《Visual.C++.2008入门经典》
9.《面向对象程序设计—C++语言描述》
10.《数据结构(C++语言版)第三版_邓俊辉》
二.实用系列：
1.《Effective C++ 》
2.《Effective STL》
3.《深入浅出设计模式》
4.《设计模式：可复用面向对象软件的基础》
5.《HeadFirst设计模式》
6.《大话设计模式》
三.中级进阶系列：
1.《More Effective C++ 》
2.《Exceptional C++ 》
3.《More Exceptional C++》
4.《Exceptional C++ Style》
5.《C++编程规范(C++ Coding Standards) 》
6.《C++ 模板完全指南(C++ Templates: The Complete Guide)》
7.《Beyond the C++ Standard Library(Boost)》
8.《C和C++安全编码》
9.《深入理解C++11》
四.高级成神系列：
1.《C++设计新思维-泛型编程与设计模式之应用(Modern C++ Design ) 》
2.《C++模板元编程(C++ Template Metaprogramming)》
3.《C++ Concurrency In Action》
4.《Advanced c++ Programming Styles and Idioms 》
5.《Real-Time C++ Efficient Object-Oriented and Template Microcontroller Programming》
6.《Advanced_Metaprogramming_in_Classic_C 》